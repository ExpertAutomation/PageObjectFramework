<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="4" total="9" passed="2">
  <reporter-output>
    <line>
      <![CDATA[<a href='C:\My_Automation\PageObjectFramework\screenshots\testLogin1_08_24_2020_13_15_38.png'><img src='C:\My_Automation\PageObjectFramework\screenshots\testLogin1_08_24_2020_13_15_38.png'height='100' width='100'/></a>]]>
    </line>
    <line>
      <![CDATA[<a href='C:\My_Automation\PageObjectFramework\screenshots\testLogin2_08_24_2020_13_15_38.png'><img src='C:\My_Automation\PageObjectFramework\screenshots\testLogin2_08_24_2020_13_15_38.png'height='100' width='100'/></a>]]>
    </line>
    <line>
      <![CDATA[<a href='C:\My_Automation\PageObjectFramework\screenshots\testLogin3_08_24_2020_13_15_38.png'><img src='C:\My_Automation\PageObjectFramework\screenshots\testLogin3_08_24_2020_13_15_38.png'height='100' width='100'/></a>]]>
    </line>
    <line>
      <![CDATA[<a href='C:\My_Automation\PageObjectFramework\screenshots\testLogin4_08_24_2020_13_15_39.png'><img src='C:\My_Automation\PageObjectFramework\screenshots\testLogin4_08_24_2020_13_15_39.png'height='100' width='100'/></a>]]>
    </line>
  </reporter-output>
  <suite name="Command line suite" duration-ms="7263" started-at="2020-08-24T13:15:33 CDT" finished-at="2020-08-24T13:15:40 CDT">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="7263" started-at="2020-08-24T13:15:33 CDT" finished-at="2020-08-24T13:15:40 CDT">
      <class name="com.murali.pom.tests.TestScreenshot">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.murali.pom.tests.TestScreenshot@6737fd8f]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-08-24T13:15:39 CDT" finished-at="2020-08-24T13:15:39 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.murali.pom.tests.TestScreenshot@6737fd8f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-08-24T13:15:39 CDT" finished-at="2020-08-24T13:15:39 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.murali.pom.tests.TestScreenshot.testSCreenshot()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testSCreenshot()[pri:0, instance:com.murali.pom.tests.TestScreenshot@6737fd8f]" name="testSCreenshot" duration-ms="0" started-at="2020-08-24T13:15:39 CDT" finished-at="2020-08-24T13:15:39 CDT">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.murali.pom.tests.TestScreenshot.testSCreenshot(TestScreenshot.java:11)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSCreenshot -->
        <test-method status="FAIL" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.murali.pom.tests.TestScreenshot@6737fd8f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-08-24T13:15:39 CDT" finished-at="2020-08-24T13:15:39 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSCreenshot status=FAILURE method=TestScreenshot.testSCreenshot()[pri:0, instance:com.murali.pom.tests.TestScreenshot@6737fd8f] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[imagePath cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: imagePath cannot be null or empty
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromPath(ExtentTest.java:1137)
at com.aventstack.extentreports.ExtentTest.addScreenCaptureFromPath(ExtentTest.java:1165)
at com.murali.pom.prjbase.MuraliBase.afterMethod(MuraliBase.java:72)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.murali.pom.tests.TestScreenshot -->
      <class name="com.murali.pom.tests.Test1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="beforeSuite" is-config="true" duration-ms="121" started-at="2020-08-24T13:15:33 CDT" finished-at="2020-08-24T13:15:33 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="beforeTest" is-config="true" duration-ms="4808" started-at="2020-08-24T13:15:33 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="beforeClass" is-config="true" duration-ms="5" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="beforeMethod" is-config="true" duration-ms="7" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.murali.pom.tests.Test1.testLogin1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testLogin1()[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="testLogin1" duration-ms="6" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="afterMethod" is-config="true" duration-ms="424" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin1 status=SUCCESS method=Test1.testLogin1()[pri:0, instance:com.murali.pom.tests.Test1@1efed156] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='C:\My_Automation\PageObjectFramework\screenshots\testLogin1_08_24_2020_13_15_38.png'><img src='C:\My_Automation\PageObjectFramework\screenshots\testLogin1_08_24_2020_13_15_38.png'height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.murali.pom.tests.Test1.testLogin2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testLogin2()[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="testLogin2" duration-ms="1" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.murali.pom.helper.AssertionHelper.makeFalse(AssertionHelper.java:28)
at com.murali.pom.tests.Test1.testLogin2(Test1.java:17)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin2 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="afterMethod" is-config="true" duration-ms="439" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin2 status=FAILURE method=Test1.testLogin2()[pri:0, instance:com.murali.pom.tests.Test1@1efed156] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='C:\My_Automation\PageObjectFramework\screenshots\testLogin2_08_24_2020_13_15_38.png'><img src='C:\My_Automation\PageObjectFramework\screenshots\testLogin2_08_24_2020_13_15_38.png'height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testLogin3()[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="testLogin3" duration-ms="1" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin3 -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:38 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.murali.pom.tests.Test1.testLogin3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="afterMethod" is-config="true" duration-ms="313" started-at="2020-08-24T13:15:38 CDT" finished-at="2020-08-24T13:15:39 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin3 status=SUCCESS method=Test1.testLogin3()[pri:0, instance:com.murali.pom.tests.Test1@1efed156] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='C:\My_Automation\PageObjectFramework\screenshots\testLogin3_08_24_2020_13_15_38.png'><img src='C:\My_Automation\PageObjectFramework\screenshots\testLogin3_08_24_2020_13_15_38.png'height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-08-24T13:15:39 CDT" finished-at="2020-08-24T13:15:39 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.murali.pom.tests.Test1.testLogin4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testLogin4()[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="testLogin4" duration-ms="0" started-at="2020-08-24T13:15:39 CDT" finished-at="2020-08-24T13:15:39 CDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.murali.pom.helper.AssertionHelper.makeFalse(AssertionHelper.java:28)
at com.murali.pom.tests.Test1.testLogin4(Test1.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin4 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="afterMethod" is-config="true" duration-ms="330" started-at="2020-08-24T13:15:39 CDT" finished-at="2020-08-24T13:15:39 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin4 status=FAILURE method=Test1.testLogin4()[pri:0, instance:com.murali.pom.tests.Test1@1efed156] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='C:\My_Automation\PageObjectFramework\screenshots\testLogin4_08_24_2020_13_15_39.png'><img src='C:\My_Automation\PageObjectFramework\screenshots\testLogin4_08_24_2020_13_15_39.png'height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="afterTest" is-config="true" duration-ms="878" started-at="2020-08-24T13:15:39 CDT" finished-at="2020-08-24T13:15:40 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.murali.pom.tests.Test1@1efed156]" name="afterSuite" is-config="true" duration-ms="368" started-at="2020-08-24T13:15:40 CDT" finished-at="2020-08-24T13:15:40 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.murali.pom.tests.Test1 -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
